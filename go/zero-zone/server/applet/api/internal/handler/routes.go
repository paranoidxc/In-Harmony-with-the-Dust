// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	featdashboard "zero-zone/applet/api/internal/handler/feat/dashboard"
	featdemo_curd "zero-zone/applet/api/internal/handler/feat/demo_curd"
	featredis "zero-zone/applet/api/internal/handler/feat/redis"
	feattest_gorm "zero-zone/applet/api/internal/handler/feat/test_gorm"
	"zero-zone/applet/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/index",
				Handler: featdashboard.DashboardIndexHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/feat/dashboard"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: featdemo_curd.DemoCurdCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: featdemo_curd.DemoCurdDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/deletes",
				Handler: featdemo_curd.DemoCurdDeletesHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/detail",
				Handler: featdemo_curd.DemoCurdDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: featdemo_curd.DemoCurdListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/page",
				Handler: featdemo_curd.DemoCurdPageHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: featdemo_curd.DemoCurdUpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/feat/demoCurd"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: featredis.RedisKeyDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/deletes",
				Handler: featredis.RedisKeyDeletesHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: featredis.RedisKeyListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/feat/redis"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: feattest_gorm.TestGormCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: feattest_gorm.TestGormDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/deletes",
				Handler: feattest_gorm.TestGormDeletesHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/detail",
				Handler: feattest_gorm.TestGormDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: feattest_gorm.TestGormListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/page",
				Handler: feattest_gorm.TestGormPageHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: feattest_gorm.TestGormUpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/feat/testGorm"),
	)
}
