type WechatLoginCheckReq {
    Token string `form:"token,optional" label:"登录凭证" validate:"required" `
}

type WechatLoginCheckResp {
    Status int `json:"status" `
    Token string `json:"token" `
    TokenName string `json:"tokenName" `
    TokenValue string `json:"token" `
}


type WechatLoginBindReq {
    Token string `json:"token,optional" label:"登录凭证" validate:"required" `
    Username string `json:"username,optional" label:"账号" validate:"required" `
    Password string `json:"password,optional" label:"密码" validate:"required" `
}

type WechatLoginBindResp {

}

// ---
type WechatLoginQRCodeReq {
    host string `json:"-" label:"" `
}

type WechatLoginQRCodeResp {
    Token string `json:"token"`
    QRCodeContent string `json:"qrCodeContent"`
}

type WechatScanReturnReq {
    Token string `form:"token,optional" label:"登录凭证" validate:"required" `
    Device string `form:"device,optional" label:"登录设备信息" validate:"required"`
    Nickname string `form:"nickname,optional" label:"微信昵称" validate:"required"`
    OpenID string `form:"openid,optional" label:"微信OpenID" validate:"required"`
}

type WechatScanReturnResp {
    Msg string `json:"-" label:"" `
}

@server (
    group:  wechat
    prefix: /wechat
)

service core-api {
    @handler LoginQRCode
    get /loginQRCode  (WechatLoginQRCodeReq) returns (WechatLoginQRCodeResp)

    @handler LoginCheck
    get /loginCheck (WechatLoginCheckReq) returns (WechatLoginCheckResp)

    @handler LoginBind
    post /loginBind (WechatLoginBindReq) returns (WechatLoginBindResp)

    @handler ScanReturn
    get /scanReturn (WechatScanReturnReq) returns (WechatScanReturnResp)
}