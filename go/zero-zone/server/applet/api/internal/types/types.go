// Code generated by goctl. DO NOT EDIT.
package types

type DashboardIndexReq struct {
	DateRangeStart string `form:"dateRangeStart,optional"`
	DateRangeEnd   string `form:"dateRangeEnd,optional"`
}

type DashboardIndexResp struct {
	HxOrderCnt  int64 `json:"hxOrderCnt"`
	UhxOrderCnt int64 `json:"uhxOrderCnt"`
}

type DemoCurd struct {
	Id        int64  `json:"firmId"`
	FirmName  string `json:"firmName"`
	FirmAlias string `json:"firmAlias"`
	FirmCode  string `json:"firmCode"`
	FirmDesc  string `json:"firmDesc"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
	DeletedAt string `json:"deletedAt"`
}

type DemoCurdCreateReq struct {
	FirmName  string `json:"firmName" validate:"required" label:"电影名称"`
	FirmAlias string `json:"firmAlias"`
	FirmCode  string `json:"firmCode" validate:"number,gte=1" label:"电影编码"`
	FirmDesc  string `json:"firmDesc"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
	DeletedAt string `json:"deletedAt"`
}

type DemoCurdDeleteReq struct {
	Id int64 `json:"firmId"`
}

type DemoCurdDeletesReq struct {
	Id []int64 `json:"firmId"`
}

type DemoCurdDetailReq struct {
	Id int64 `form:"firmId"`
}

type DemoCurdDetailResp struct {
	Id        int64  `json:"firmId"`
	FirmName  string `json:"firmName"`
	FirmAlias string `json:"firmAlias"`
	FirmCode  string `json:"firmCode"`
	FirmDesc  string `json:"firmDesc"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
	DeletedAt string `json:"deletedAt"`
}

type DemoCurdListReq struct {
	FirmName  string `form:"firmName,optional"`
	FirmAlias string `form:"firmAlias,optional"`
	FirmCode  string `form:"firmCode,optional"`
	FirmDesc  string `form:"firmDesc,optional"`
	CreatedAt string `form:"createdAt,optional"`
	UpdatedAt string `form:"updatedAt,optional"`
	DeletedAt string `form:"deletedAt,optional"`
}

type DemoCurdListResp struct {
	List  []DemoCurd `json:"list"`
	Total int64      `json:"total"`
}

type DemoCurdPageReq struct {
	PageReq
	FirmName  string `form:"firmName,optional"`
	FirmAlias string `form:"firmAlias,optional"`
	FirmCode  string `form:"firmCode,optional"`
	FirmDesc  string `form:"firmDesc,optional"`
	CreatedAt string `form:"createdAt,optional"`
	UpdatedAt string `form:"updatedAt,optional"`
	DeletedAt string `form:"deletedAt,optional"`
}

type DemoCurdPageResp struct {
	List       []DemoCurd `json:"list"`
	Pagination Pagination `json:"pagination"`
}

type DemoCurdUpdateReq struct {
	Id        int64  `json:"firmId"`
	FirmName  string `json:"firmName"`
	FirmAlias string `json:"firmAlias"`
	FirmCode  string `json:"firmCode"`
	FirmDesc  string `json:"firmDesc"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
	DeletedAt string `json:"deletedAt"`
}

type PageReq struct {
	Page  int64 `form:"page"  validate:"number,gte=1"  label:"页数"`
	Limit int64 `form:"limit" validate:"number,gte=1"  label:"条数"`
}

type Pagination struct {
	Page  int64 `json:"page"`
	Limit int64 `json:"limit"`
	Total int64 `json:"total"`
}

type RedisKey struct {
	Key string `json:"key"`
}

type RedisKeyDeleteReq struct {
	Key string `json:"key,optional"  validate:"required" label:"缓存Key"`
}

type RedisKeyDeletesReq struct {
	Key []string `json:"key,optional"  validate:"required" label:"缓存Key"`
}

type RedisKeyListResp struct {
	List []RedisKey `json:"list"`
}

type TestGorm struct {
	ID        int64  `json:"id"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	DeletedAt string `json:"deleted_at"`
	Text      string `json:"text"`
}

type TestGormCreateReq struct {
	Text string `json:"text"`
}

type TestGormDeleteReq struct {
	ID int64 `json:"id"`
}

type TestGormDeletesReq struct {
	ID []int64 `json:"id"`
}

type TestGormDetailReq struct {
	ID int64 `form:"id"`
}

type TestGormDetailResp struct {
	ID   int64  `json:"id"`
	Text string `json:"text"`
}

type TestGormListReq struct {
	Text string `form:"text,optional"`
}

type TestGormListResp struct {
	List  []TestGorm `json:"list"`
	Total int64      `json:"total"`
}

type TestGormPageReq struct {
	PageReq
	Text string `form:"text,optional"`
}

type TestGormPageResp struct {
	List       []TestGorm `json:"list"`
	Pagination Pagination `json:"pagination"`
}

type TestGormUpdateReq struct {
	ID   int64  `json:"id"`
	Text string `json:"text"`
}
